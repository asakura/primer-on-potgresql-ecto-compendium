#+TITLE: Конспект PostgreSQL Основы языка SQL и Ecto
#+AUTHOR: Mikalai Seva
#+EMAIL: mikalai.seva@gmail.com
#+DESCRIPTION:
#+KEYWORDS: PostgreSQL SQL Primer Ecto Elixir
#+LANGUAGE: ru, en
#+OPTIONS: H:3 toc:2 p:t
#+OPTIONS: ^:{}
#+SETUPFILE: https://fniessen.github.io/org-html-themes/org/theme-readtheorg.setup

* Введение в базы данных и SQL
** Что такое базы данных
   Одним из основных понятий в теории баз данных является *модель данных*. Можно
   сказать, что она характеризует способ организации данных и основные методы
   доступа к ним. В ходе эволюции теорий и идей была разработана реляционная
   модель данных, которая сейчас и является доминирующей. Характерной чертой
   реляционных баз данных является тот факт, что данные воспринимаются
   пользователем как таблицы.

   Одним из достоинств реляционной базы данных является ее способность
   поддерживать связи между элементами данных, избавляя программиста от
   необходимости заниматься этой рутинной и очень трудоемкой работой. Работая с
   реляционными базами данных, программист избавлен от программирования на
   «атомарном» уровне, потому что современные языки для «общения» с этими базами
   данных являются декларативными.

   Система баз данных — это компьютеризированная система, предназначенная для
   хранения, переработки и выдачи информации по запросу пользователей. Такая
   система включает в себя программное и аппаратное обеспечение, сами данные, а
   также пользователей.

   Современные системы баз данных являются, как правило, многопользовательскими.
   В таких системах одновременный доступ к базе данных могут получить
   сразу несколько пользователей.

   Основным программным обеспечением является система управления базами данных.
   По-английски она называется /database management system/ (DBMS). Кроме СУБД в
   систему баз данных могут входить утилиты, средства для разработки приложений
   (программ), средства проектирования базы данных, генераторы отчетов и др.

   Пользователи систем с базами данных подразделяются на ряд категорий. Первая
   категория — это прикладные программисты. Вторая категория — это конечные
   пользователи, ради которых и выполняется вся работа. Они могут получить
   доступ к базе данных, используя прикладные программы или универсальные
   приложения, которые входят в программное обеспечение самой СУБД. Третья
   категория пользователей — это администраторы базы данных. В их обязанности
   входят: создание базы данных, выбор оптимальных режимов доступа к ней,
   разграничение полномочий различных пользователей на доступ к той или иной
   информации в базе данных, выполнение резервного копирования базы данных и
   т.д.

   Систему баз данных можно разделить на два главных компонента: сервер и
   набор клиентов (или внешних интерфейсов). Сервер — это и есть СУБД. Один
   сервер может обслуживать много клиентов.

   Современные СУБД включают в себя словарь данных. Это часть базы данных,
   которая описывает сами данные, хранящиеся в ней. Словарь данных помогает СУБД
   выполнять свои функции.
** Основные понятия реляционной модели
   В эпоху, предшествующую рождению реляционной теории, базы данных традиционно
   рассматривались как набор *файлов*, состоящих из *записей*, а записи, в свою
   очередь, подразделялись на отдельные *поля*. Поле являлось элементарной
   единицей данных.

   В реляционных базах данных пользователь воспринимает данные в виде таблиц.
   Поэтому термину «файл» соответствует термин *«таблица»*, вместо термина
   «запись» используется термин *«строка»*, а вместо термина «поле» —
   термин *«столбец»* (или *«колонка»*).

   В формальной теории реляционных баз данных эти таблицы называют *отношениями*
   (*relations*) — поэтому и базы данных называются реляционными. Отношение —
   это математический термин. При определении свойств таких отношений
   используется теория множеств. В терминах данной теории строки таблицы будут
   называться *кортежами* (*tuples*), а колонки — *атрибутами*. Отношение имеет
   заголовок, который состоит из атрибутов, и тело, состоящее из кортежей.
   Количество атрибутов называется *степенью отношения*, а количество кортежей
   — *кардинальным числом*. Кроме теории множеств, одним из оснований реляционной
   теории является такой раздел математической логики, как исчисление предикатов.

   При работе с базами данных часто приходится следовать
   *различнымограничениям*, которые могут быть обусловлены спецификой конкретной
   предметной области.

   Для идентификации строк в таблицах и для связи таблиц между собой
   используются так называемые ключи. *Потенциальный ключ* — это комбинация
   атрибутов таблицы, позволяющая уникальным образом идентифицировать строки в
   ней. Ключ может состоять только лишь из одного атрибута таблицы.
   Потенциальный ключ должен быть неизбыточным, т.е. никакое подмножество
   атрибутов, входящих в него, не должно обладать свойством уникальности. Ключ,
   состоящий из нескольких атрибутов называется составным.

   Ключи нужны для адресации на уровне строк (записей). При наличии в таблице
   более одного потенциального ключа один из них выбирается в качестве так
   называемого *первичного ключа*, а остальные будут являться *альтернативными
   ключами*.

   *Внешним ключ* - это ключ, используемый для объединения двух таблиц. Таблица,
   содержащая внешний ключ, называется *ссылающейся* таблицей (*referencing
   table*). Таблица, содержащая соответствующий потенциальный ключ, называется
   *ссылочной* (*целевой*) таблицей (referenced table). В таких случаях говорят,
   что внешний ключ ссылается на потенциальный ключ в ссылочной таблице. Внешний
   ключ может быть составным, т.е. может включать более одного атрибута. Внешний
   ключ не обязан быть уникальным.

   Проблема обеспечения того, чтобы база данных не содержала неверных значений
   внешних ключей, известна как проблема *ссылочной целостности*. Ограничение,
   согласно которому значения внешних ключей должны соответствовать значениям
   потенциальных ключей, называется *ограничением ссылочной целостности*
   (*ссылочным ограничением*).

   Обеспечением выполнения ограничений ссылочной целостности занимается СУБД, а
   от разработчика требуется лишь указать атрибуты, служащие в качестве внешних
   ключей. При проектировании баз данных часто предусматривается, что при
   удалении строки из ссылочной таблицы соответствующие строки из ссылающейся
   таблицы должны быть также удалены, а при изменении значения столбца, на
   который ссылается внешний ключ, должны быть изменены значения внешнего ключа
   в ссылающейся таблице. Этот подход называется *каскадным удалением*
   (*обновлением*).

   Иногда применяются и другие подходы. Например, вместо удаления строк из
   ссылающейся таблицы в этих строках просто заменяют значения атрибутов,
   входящих во внешний ключ, так называемыми *NULL*-значениями. Первичные ключи
   не могут содержать NULL-значений.

   *Транзакция* — одно из важнейших понятий теории баз данных. Она означает
   набор операций над базой данных, рассматриваемых как единая и неделимая
   единица работы, выполняемая полностью или не выполняемая вовсе, если
   произошел какойто сбой в процессе выполнения транзакции. Таким образом,
   транзакции являются *средством обеспечения согласованности данных*.
** Что такое язык SQL
   Язык SQL — это непроцедурный язык, который является стандартным средством
   работы с данными во всех реляционных СУБД. *Операторы* (*команды*),
   написанные на этом языке, лишь указывают СУБД, какой результат должен быть
   получен, но не описывают процедуру получения этого результата. СУБД сама
   определяет способ выполнения команды пользователя. В языке SQL традиционно
   выделяются группа операторов определения данных (Data Definition Language —
   DDL), группа операторов манипулирования данными (Data Manipulation Language —
   DML) и группа операторов, управляющих привилегиями доступа к объектам базы
   данных (Data Control Language — DCL).
** Контрольные вопросы и задания
*** Вопрос 1
    Какие группы операторов выделяются в составе языка SQL?

    ОТВЕТ:
    - DDL - data definition language
    - DML - data manipulation language
    - DCL - data control language
